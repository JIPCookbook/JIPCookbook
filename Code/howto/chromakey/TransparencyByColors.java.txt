/*
 * Part of the Java Image Processing Cookbook, please see
 * http://www.lac.inpe.br/~rafael.santos/JIPCookbook.jsp
 * for information on usage and distribution.
 * Rafael Santos (rafael.santos@lac.inpe.br)
 */
package howto.chromakey;

import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import com.sun.media.jai.widget.DisplayJAI;

/**
 * This class demonstrates how to select a color for transparency to create overlays of images. 
 * It reads two images from the disk, drawing the second one over the first one but considering 
 * green pixels on the second one as transparent.
 */
public class TransparencyByColors
  {
  /**
   * @param args the arguments for the application (will be ignored)
   * @throws IOException 
   */
  public static void main(String[] args) throws IOException
    {
    // Read the input images. We assume that the first image is the background, and that it is larger
    // than the second image.
    BufferedImage background = ImageIO.read(new File("dsc00099_large.jpg"));
    WritableRaster raster = background.getRaster();
    BufferedImage layer = ImageIO.read(new File("UFO.png"));
    int width = layer.getWidth();
    int height = layer.getHeight();
    // We will shift the overlay image over the background this amount.
    int shiftX = 72;
    int shiftY = 80;
    // Slow method: scan all input (layer) image pixels, plotting only those which are not green.
    int lPixel,red,green,blue;
    for(int w=0;w<width;w++)
      for(int h=0;h<height;h++)
        {
        lPixel = layer.getRGB(w,h);
        if ((lPixel&0x00FFFFFF) != 0x00FF00) // Not pure green!
          {
          red   = (int)((lPixel&0x00FF0000)>>>16); // Red level
          green = (int)((lPixel&0x0000FF00)>>>8);  // Green level
          blue  = (int) (lPixel&0x000000FF);       // Blue level
          // Set the pixel on the output image's raster.
          raster.setPixel(w+shiftX,h+shiftY,new int[]{red,green,blue,255});        
          }
        } // end for
    // Save the image as a PNG via ImageIO.
    ImageIO.write(background,"PNG",new File("transparency.png"));
    // Display the input and output images.
    JFrame frame = new JFrame("Transparency by Colors");    
    frame.add(new DisplayJAI(background));
    frame.pack();
    frame.setVisible(true);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
  }
