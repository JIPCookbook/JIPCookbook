/*
 * Part of the Java Image Processing Cookbook, please see
 * http://www.lac.inpe.br/~rafael.santos/JIPCookbook.jsp
 * for information on usage and distribution.
 * Rafael Santos (rafael.santos@lac.inpe.br)
 */
package data.creation;

import java.awt.image.DataBuffer;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.WritableRaster;
import java.util.Arrays;

import javax.media.jai.JAI;
import javax.media.jai.TiledImage;

import com.sun.media.jai.codec.TIFFEncodeParam;

/**
 * This application creates a pure black-and-white image using the Java Advanced Imaging API.
 */
public class CreateTiledBWImageJAI
  {
  public static void main(String[] args)
    {
    // The image dimensions.
    int width = 640; int height = 640;
    // The tile dimensions.
    int tWidth = 64; int tHeight = 64;
    // We need a sample model where the pixels are packed into one data type.
    MultiPixelPackedSampleModel sampleModel = 
      new MultiPixelPackedSampleModel(DataBuffer.TYPE_BYTE,tWidth,tHeight,1); // one bit per pixel
    // Create a TiledImage using the SampleModel. Note that the size of the image is not the same
    // as the size of the tiles, specified on the instance SampleModel.
    TiledImage tiledImage = new TiledImage(0,0,width,height,0,0,sampleModel,null);
    // We must process all tiles.
    for(int th=tiledImage.getMinTileY();th<=tiledImage.getMaxTileY();th++)
      for(int tw=tiledImage.getMinTileX();tw<=tiledImage.getMaxTileX();tw++)
        {
        // Get a raster for that tile.
        WritableRaster wr = tiledImage.getWritableTile(tw,th);
        // Paint it white.
        int[] white = new int[tWidth*tHeight];
        Arrays.fill(white,1);
        wr.setSamples(wr.getMinX(),wr.getMinY(),tWidth,tHeight,0,white);
        // Paint a black box in the middle.
        int[] black = new int[32*32];
        wr.setSamples(wr.getMinX()+16,wr.getMinY()+16,32,32,0,black);
        // Draw an edge.
        for(int h=0;h<tHeight;h++)
          {
          wr.setSample(wr.getMinX(),wr.getMinY()+h,0,0);
          wr.setSample(wr.getMinX()+tWidth-1,wr.getMinY()+h,0,0);
          }
        for(int w=0;w<tWidth;w++)
          {
          wr.setSample(wr.getMinX()+w,wr.getMinY(),0,0);
          wr.setSample(wr.getMinX()+w,wr.getMinY()+tHeight-1,0,0);
          }
        }
    // Save the image on a file. We cannot just store it, we must set the image encoding parameters
    // to ensure that it will be stored as a tiled image.
    TIFFEncodeParam tep = new TIFFEncodeParam();
    tep.setWriteTiled(true);
    tep.setTileSize(tWidth,tHeight);
    JAI.create("filestore",tiledImage,"jaitiled.tiff","TIFF",tep);
    }

  }