/*
 * Part of the Java Image Processing Cookbook, please see
 * http://www.lac.inpe.br/~rafael.santos/JIPCookbook.jsp
 * for information on usage and distribution.
 * Rafael Santos (rafael.santos@lac.inpe.br)
 */
package data.creation;

import java.awt.image.DataBuffer;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.WritableRaster;
import java.util.Arrays;

import javax.media.jai.JAI;
import javax.media.jai.TiledImage;

/**
 * This application creates a pure black-and-white image using the Java Advanced Imaging API.
 */
public class CreateBWImageJAI
  {
  public static void main(String[] args)
    {
    // The image dimensions.
    int width = 640; int height = 640;
    // We need a sample model where the pixels are packed into one data type.
    MultiPixelPackedSampleModel sampleModel = 
      new MultiPixelPackedSampleModel(DataBuffer.TYPE_BYTE,width,height,1); // one bit per pixel
    // Create a TiledImage using the SampleModel.
    TiledImage tiledImage = new TiledImage(0,0,width,height,0,0,sampleModel,null);
    // Get a raster for the single tile.
    WritableRaster wr = tiledImage.getWritableTile(0,0);
    // Paint it white.
    int[] white = new int[width*height];
    Arrays.fill(white,1);
    wr.setSamples(0,0,width,height,0,white);
    // Paint a black box in the middle.
    int[] black = new int[320*320];
    wr.setSamples(160,160,320,320,0,black);
    // Draw an edge.
    for(int h=0;h<height;h++)
      {
      wr.setSample(0,h,0,0);
      wr.setSample(width-1,h,0,0);
      }
    for(int w=0;w<width;w++)
      {
      wr.setSample(w,0,0,0);
      wr.setSample(w,height-1,0,0);
      }
    // Save the image on a file.
    JAI.create("filestore",tiledImage,"jaibw.png","PNG");
    }
  
  }