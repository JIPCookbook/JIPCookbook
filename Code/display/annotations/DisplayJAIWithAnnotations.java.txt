/*
 * Part of the Java Image Processing Cookbook, please see
 * http://www.lac.inpe.br/~rafael.santos/JIPCookbook.jsp
 * for information on usage and distribution.
 * Rafael Santos (rafael.santos@lac.inpe.br)
 */
package display.annotations;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.RenderedImage;
import java.util.ArrayList;

import com.sun.media.jai.widget.DisplayJAI;

/**
 * This class extends DisplayJAI allowing the representation and display of annotations (drawings).
 */
public class DisplayJAIWithAnnotations extends DisplayJAI
  {
  protected ArrayList<DrawableAnnotation> annotations; // List of annotations that will be
                                                       // (non-interactively) drawn over the image.

  // Constructor for the class.
  public DisplayJAIWithAnnotations(RenderedImage image)
    {
    super(image); // Calls the constructor for DisplayJAI
    annotations = new ArrayList<DrawableAnnotation>(); // List that will held the drawings.
    }

  // This method paints the component and all its annotations.
  public void paint(Graphics g)
    {
    super.paint(g);
    Graphics2D g2d = (Graphics2D)g;
    for (DrawableAnnotation d:annotations) 
      {
      d.paint(g2d);
      }
    }

  // Add an annotation (instance of any class that inherits from DrawableAnnotation) to the list 
  // of annotations which will be drawn.
  public void addAnnotation(DrawableAnnotation a) 
    {
    annotations.add(a);  
    }
  
  } 